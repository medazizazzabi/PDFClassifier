!(function () {
  window;
  const e = document.documentElement;
  if (
    (e.classList.remove("no-js"),
    e.classList.add("js"),
    document.body.classList.contains("has-animations"))
  ) {
    (window.sr = ScrollReveal()).reveal(".feature, .pricing-table-inner", {
      duration: 600,
      distance: "20px",
      easing: "cubic-bezier(0.5, -0.01, 0, 1.005)",
      origin: "bottom",
      interval: 100,
    }),
      e.classList.add("anime-ready"),
      anime
        .timeline({ targets: ".hero-figure-box-05" })
        .add({
          duration: 400,
          easing: "easeInOutExpo",
          scaleX: [0.05, 0.05],
          scaleY: [0, 1],
          perspective: "500px",
          delay: anime.random(0, 400),
        })
        .add({ duration: 400, easing: "easeInOutExpo", scaleX: 1 })
        .add({
          duration: 800,
          rotateY: "-15deg",
          rotateX: "8deg",
          rotateZ: "-1deg",
        }),
      anime
        .timeline({ targets: ".hero-figure-box-06, .hero-figure-box-07" })
        .add({
          duration: 400,
          easing: "easeInOutExpo",
          scaleX: [0.05, 0.05],
          scaleY: [0, 1],
          perspective: "500px",
          delay: anime.random(0, 400),
        })
        .add({ duration: 400, easing: "easeInOutExpo", scaleX: 1 })
        .add({ duration: 800, rotateZ: "20deg" }),
      anime({
        targets:
          ".hero-figure-box-01, .hero-figure-box-02, .hero-figure-box-03, .hero-figure-box-04, .hero-figure-box-08, .hero-figure-box-09, .hero-figure-box-10",
        duration: anime.random(600, 800),
        delay: anime.random(600, 800),
        rotate: [
          anime.random(-360, 360),
          function (e) {
            return e.getAttribute("data-rotation");
          },
        ],
        scale: [0.7, 1],
        opacity: [0, 1],
        easing: "easeInOutExpo",
      });
  }
})();

const scrollContainer = document.querySelector(".slider");
const prevButtons = document.getElementsByClassName("prevBtn");
const nextButtons = document.getElementsByClassName("nextBtn");

let currentSlide = 0;
let slideWidth = window.innerWidth; // Initialize slide width

// Button click event handlers
[...prevButtons].forEach((e) => {
  e.addEventListener("click", () => changeSlide(-1));
  e.addEventListener("click", (e) => e.preventDefault());
});

[...nextButtons].forEach((e) => {
  e.addEventListener("click", () => changeSlide(1));
  e.addEventListener("click", (e) => e.preventDefault());
});

// Recalculate slide width when the window is resized
window.addEventListener("resize", () => {
  slideWidth = window.innerWidth;
  updateSlidePosition(); // Update the slide position after resizing
});

// Change slide function
function changeSlide(direction) {
  const newSlide = currentSlide + direction;

  // Ensure the newSlide is within the valid range
  if (newSlide >= 0 && newSlide < scrollContainer.children.length) {
    currentSlide = newSlide;
    updateSlidePosition();
  }
}

// Update slide position using CSS transform
function updateSlidePosition() {
  const offsetX = currentSlide * -slideWidth;
  scrollContainer.style.transform = `translateX(${offsetX}px)`;
}
